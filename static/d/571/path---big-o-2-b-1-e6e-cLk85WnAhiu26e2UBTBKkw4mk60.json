{"data":{"site":{"siteMetadata":{"title":"FullStackJs","author":"Le Van Son"}},"markdownRemark":{"id":"9593e803-d525-5920-810a-419dc1a2fae6","excerpt":"Giới thiệuBigO là một những khái niệm quan trọng mà một developer nên nắm để viết code tốt hơn.\nMôtMục lụcCall StackPrimitive Types Kiểu dữ liệu nguyên…","html":"<h2>Giới thiệu</h2>\n<p>BigO là một những khái niệm quan trọng mà một developer nên nắm để viết code tốt hơn.\nMôt</p>\n<h2>Mục lục</h2>\n<ol>\n<li><strong><a href=\"#1-call-stack\">Call Stack</a></strong></li>\n<li><strong><a href=\"#2-primitive-types\">Primitive Types</a></strong> Kiểu dữ liệu nguyên thủy</li>\n<li><strong><a href=\"#3-value-types-and-reference-types\">Value Types and Reference Types</a></strong></li>\n<li><strong><a href=\"#4-implicit-explicit-nominal-structuring-and-duck-typing\">Implicit, Explicit, Nominal, Structuring and Duck Typing</a></strong></li>\n<li><strong><a href=\"#5--vs--vs-typeof\">== vs === vs typeof</a></strong></li>\n<li><strong><a href=\"#6-function-scope-block-scope-and-lexical-scope\">Function Scope, Block Scope and Lexical Scope</a></strong></li>\n<li><strong><a href=\"#7-expression-vs-statement\">Expression vs Statement</a></strong> Biểu thức, câu lệnh.</li>\n<li><strong><a href=\"#8-iife-modules-and-namespaces\">IIFE, Modules and Namespaces</a></strong></li>\n<li><strong><a href=\"#9-message-queue-and-event-loop\">Message Queue and Event Loop</a></strong></li>\n<li><strong><a href=\"#10-settimeout-setinterval-and-requestanimationframe\">setTimeout, setInterval and requestAnimationFrame</a></strong></li>\n<li><strong><a href=\"#11-javascript-engines\">JavaScript Engines</a></strong> Trình thông dịch mã Javascript</li>\n<li><strong><a href=\"#12-bitwise-operators-type-arrays-and-array-buffers\">Bitwise Operators, Type Arrays and Array Buffers</a></strong></li>\n<li><strong><a href=\"#13-dom-and-layout-trees\">DOM and Layout Trees</a></strong></li>\n<li><strong><a href=\"#14-factories-and-classes\">Factories and Classes</a></strong></li>\n<li><strong><a href=\"#15-this-call-apply-and-bind\">this, call, apply and bind</a></strong></li>\n<li><strong><a href=\"#16-new-constructor-instanceof-and-instances\">new, Constructor, instanceof and Instances</a></strong></li>\n<li><strong><a href=\"#17-prototype-inheritance-and-prototype-chain\">Prototype Inheritance and Prototype Chain</a></strong></li>\n<li><strong><a href=\"#18-objectcreate-and-objectassign\">Object.create and Object.assign</a></strong></li>\n<li><strong><a href=\"#19-map-reduce-filter\">map, reduce, filter</a></strong></li>\n<li><strong><a href=\"#20-pure-functions-side-effects-and-state-mutation\">Pure Functions, Side Effects and State Mutation</a></strong></li>\n<li><strong><a href=\"#21-closures\">Closures</a></strong></li>\n<li><strong><a href=\"#22-high-order-functions\">High Order Functions</a></strong></li>\n<li><strong><a href=\"#23-recursion\">Recursion</a></strong> Đệ quy</li>\n<li><strong><a href=\"#24-collections-and-generators\">Collections and Generators</a></strong></li>\n<li><strong><a href=\"#25-promises\">Promises</a></strong> Đồng bộ Promises</li>\n<li><strong><a href=\"#26-asyncawait\">async/await</a></strong> Đồng độ async/await</li>\n<li><strong><a href=\"#27-data-structures\">Data Structures</a></strong> Cấu trúc dữ liệu</li>\n<li><strong><a href=\"#28-expensive-operation-and-big-o-notation\">Expensive Operation and Big O Notation</a></strong> Hoạt động tốn kém và Ký hiệu O lớn</li>\n<li><strong><a href=\"#29-algorithms\">Algorithms</a></strong> Thuật toán</li>\n<li><strong><a href=\"#30-inheritance-polymorphism-and-code-reuse\">Inheritance, Polymorphism and Code Reuse</a></strong> Thừa kế, đa hình và tái sử dụng code</li>\n<li><strong><a href=\"#31-design-patterns\">Design Patterns</a></strong> Khuôn mẫu thiết kế</li>\n<li><strong><a href=\"#32-partial-applications-currying-compose-and-pipe\">Partial Applications, Currying, Compose and Pipe</a></strong></li>\n<li><strong><a href=\"#33-clean-code\">Clean Code</a></strong> Code sạch</li>\n</ol>\n<hr>\n<h2>1. Call Stack</h2>\n<h3>Bài viết</h3>\n<ul>\n<li>📜 <a href=\"https://medium.com/@gaurav.pandvia/understanding-javascript-function-executions-tasks-event-loop-call-stack-more-part-1-5683dea1f5ec\">Understanding Javascript Call Stack, Event Loops — Gaurav Pandvia</a></li>\n<li>📜 <a href=\"https://medium.freecodecamp.org/understanding-the-javascript-call-stack-861e41ae61d4\">Understanding the JavaScript Call Stack — Charles Freeborn</a></li>\n<li>📜 <a href=\"https://www.valentinog.com/blog/js-execution-context-call-stack/\">Javascript: What Is The Execution Context? What Is The Call Stack? — Valentino Gagliardi</a></li>\n<li>📜 <a href=\"https://gist.github.com/jesstelford/9a35d20a2aa044df8bf241e00d7bc2d0\">What is the JS Event Loop and Call Stack? — Jess Telford</a></li>\n<li>📜 <a href=\"https://developer.mozilla.org/en-US/docs/Glossary/Call_stack\">Call Stack — MDN</a></li>\n<li>📜 <a href=\"https://blog.bitsrc.io/understanding-execution-context-and-execution-stack-in-javascript-1c9ea8642dd0\">Understanding Execution Context and Execution Stack in Javascript — Sukhjinder Arora</a></li>\n<li>📜 <a href=\"https://blog.sessionstack.com/how-does-javascript-actually-work-part-1-b0bacc073cf\">How JavaScript Works: An Overview of the Engine, the Runtime, and the Call Stack — Alexander Zlatkov</a></li>\n<li>📜 <a href=\"https://tylermcginnis.com/ultimate-guide-to-execution-contexts-hoisting-scopes-and-closures-in-javascript/\">The Ultimate Guide to Execution Contexts, Hoisting, Scopes, and Closures in JavaScript — Tyler McGinnis</a></li>\n</ul>\n<h3>Videos</h3>\n<ul>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=w6QGEiQceOM\">Javascript: the Call Stack explained — Coding Blocks India</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=W8AeMrVtFLY\">The JS Call Stack Explained In 9 Minutes — Colt Steele</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=jT0USJeNFEA\">JavaScript Execution Stack — Codecademy</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=w7QWQlkLY_s\">What is the Call Stack? — Eric Traub</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=Q2sFmqvpBe0\">The Call Stack — Kevin Drumm</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=Z6a1cLyq7Ac&#x26;list=PLWrQZnG8l0E4kd1T_nyuVoxQUaYEWFgcD\">Understanding JavaScript Execution — Codesmith</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=mk0lu9MKBto\">Call Stack &#x26; Event Loop — movies com</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=Nt-qa_LlUH0\">The Ultimate Guide to Execution Contexts, Hoisting, Scopes, and Closures in JavaScript — Tyler McGinnis</a></li>\n</ul>\n<p><strong><a href=\"#m%E1%BB%A5c-l%E1%BB%A5c\">⬆ Lên đầu trang</a></strong></p>\n<hr>\n<h2>2. Primitive Types</h2>\n<h3>Bài viết</h3>\n<ul>\n<li>📜 <a href=\"http://2ality.com/2012/04/number-encoding.html\">How numbers are encoded in JavaScript — Dr. Axel Rauschmayer</a></li>\n<li>📜 <a href=\"https://medium.com/dailyjs/javascripts-number-type-8d59199db1b6\">What You Need to Know About JavaScript Number Type — Max Wizard K</a></li>\n<li>📜 <a href=\"https://blog.chewxy.com/2014/02/24/what-every-javascript-developer-should-know-about-floating-point-numbers/\">What Every JavaScript Developer Should Know About Floating Point Numbers — Chewxy</a></li>\n<li>📜 <a href=\"https://javascriptweblog.wordpress.com/2010/09/27/the-secret-life-of-javascript-primitives/\">The Secret Life of JavaScript Primitives — Angus Croll</a></li>\n<li>📜 <a href=\"https://flow.org/en/docs/types/primitives/\">Primitive Types — Flow</a></li>\n<li>📜 <a href=\"http://blog.brew.com.hk/not-everything-in-javascript-is-an-object/\">(Not) Everything in JavaScript is an Object - Daniel Li</a></li>\n<li>📜 <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Primitive_values\">JavaScript data types and data structures - MDN</a></li>\n</ul>\n<h3>Videos</h3>\n<ul>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=9ooYYRLdg_g\">JavaScript Reference vs Primitive Types — Academind</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=HsbWQsSCE5Y\">JavaScript Primitive Types — Simon Sez IT</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=F7YbhKbpFic\">Javascript Primitive and Reference Types — Baljeet Singh</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=e-_mDyqm2oU\">Value Types and Reference Types in JavaScript — Programming with Mosh</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=qw3j0A3DIzQ\">JavaScript Primitive Data Types — Avelx</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=MqHDDtVYJRI\">Everything you never wanted to know about JavaScript numbers — Bartek Szopka</a></li>\n</ul>\n<p><strong><a href=\"#m%E1%BB%A5c-l%E1%BB%A5c\">⬆ Lên đầu trang</a></strong></p>\n<hr>\n<h2>3. Value Types and Reference Types</h2>\n<h3>Bài viết</h3>\n<ul>\n<li>📜 <a href=\"https://codeburst.io/explaining-value-vs-reference-in-javascript-647a975e12a0\">Explaining Value vs. Reference in Javascript — Arnav Aggarwal</a></li>\n<li>📜 <a href=\"https://www.zsoltnagy.eu/understand-value-and-reference-types-in-javascript/\">Understand Value and Reference Types in JavaScript — Zsolt Nagy</a></li>\n<li>📜 <a href=\"https://gist.github.com/branneman/7fb06d8a74d7e6d4cbcf75c50fec599c\">Primitive Types &#x26; Reference Types in JavaScript — Bran van der Meer</a></li>\n<li>📜 <a href=\"https://medium.com/@benastontweet/lesson-1b-javascript-fundamentals-380f601ba851\">Value Types, Reference Types and Scope in JavaScript — Ben Aston</a></li>\n<li>📜 <a href=\"https://medium.com/dailyjs/back-to-roots-javascript-value-vs-reference-8fb69d587a18\">Back to roots: JavaScript Value vs Reference — Miro Koczka</a></li>\n<li>📜 <a href=\"https://hackernoon.com/grasp-by-value-and-by-reference-in-javascript-7ed75efa1293\">Grasp “By Value” and “By Reference” in JavaScript — Léna Faure</a></li>\n<li>📜 <a href=\"https://hackernoon.com/javascript-reference-and-copy-variables-b0103074fdf0\">JavaScript Reference and Copy Variables — Vítor Capretz</a></li>\n<li>📜 <a href=\"http://www.javascripttutorial.net/javascript-primitive-vs-reference-values/\">JavaScript Primitive vs Reference Values</a></li>\n</ul>\n<h3>Videos</h3>\n<ul>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=E-dAnFdq8k8\">Javascript Pass by Value vs Pass by Reference — techsith</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=fD0t_DKREbE\">JavaScript Value vs Reference Types — Programming with Mosh</a></li>\n</ul>\n<p><strong><a href=\"#m%E1%BB%A5c-l%E1%BB%A5c\">⬆ Lên đầu trang</a></strong></p>\n<hr>\n<h2>4. Implicit, Explicit, Nominal, Structuring and Duck Typing</h2>\n<h3>Bài viết</h3>\n<ul>\n<li>📜 <a href=\"https://dev.to/promhize/what-you-need-to-know-about-javascripts-implicit-coercion-e23\">What you need to know about Javascript’s Implicit Coercion — Promise Tochi</a></li>\n<li>📜 <a href=\"https://medium.freecodecamp.org/js-type-coercion-explained-27ba3d9a2839\">JavaScript Type Coercion Explained — Alexey Samoshkin</a></li>\n<li>📜 <a href=\"https://hackernoon.com/javascript-coercion-explained-545c895213d3\">Javascript Coercion Explained — Ben Garrison</a></li>\n<li>📜 <a href=\"https://stackoverflow.com/questions/19915688/what-exactly-is-type-coercion-in-javascript\">What exactly is Type Coercion in Javascript? - Stack Overflow</a></li>\n<li>📜 <a href=\"https://www.oreilly.com/library/view/you-dont-know/9781491905159/ch04.html\">You Don’t Know JS: Types &#x26; Grammar [Book] — Kyle Simpson</a></li>\n<li>📜 <a href=\"http://blog.brew.com.hk/not-everything-in-javascript-is-an-object/\">(Not) Everything in JavaScript is an Object - Daniel Li</a></li>\n<li>📜 <a href=\"https://thedevs.network/blog/type-coercion-in-javascript-and-why-everyone-gets-it-wrong\">Type Coercion in JavaScript, and why everyone gets it wrong.</a></li>\n</ul>\n<h3>Videos</h3>\n<ul>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=qGyqzN0bjhc&#x26;t\">== ? === ??? …#@^% - Shirmung Bielefeld</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=b04Q_vyqEG8\">Coercion in Javascript - Hitesh Choudhary</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=z4-8wMSPJyI\">JavaScript Questions: What is Coercion? - Steven Hancock</a></li>\n</ul>\n<p><strong><a href=\"#m%E1%BB%A5c-l%E1%BB%A5c\">⬆ Lên đầu trang</a></strong></p>\n<hr>\n<h2>5. == vs === vs typeof</h2>\n<h3>Bài viết</h3>\n<ul>\n<li>📜 <a href=\"https://codeburst.io/javascript-double-equals-vs-triple-equals-61d4ce5a121a\">JavaScript Double Equals vs. Triple Equals — Brandon Morelli</a></li>\n<li>📜 <a href=\"https://www.codecademy.com/en/forum_questions/558ea4f5e39efed371000508\">What is the difference between =, ==, and === in JS? — Codecademy</a></li>\n<li>📜 <a href=\"https://bytearcher.com/articles/equality-comparison-operator-javascript/\">Should I use === or == equality comparison operator in JavaScript? — Panu Pitkamaki</a></li>\n<li>📜 <a href=\"https://www.codementor.io/javascript/tutorial/double-equals-and-coercion-in-javascript\">== vs === JavaScript: Double Equals and Coercion — AJ Meyghani</a></li>\n<li>📜 <a href=\"https://www.impressivewebs.com/why-use-triple-equals-javascipt/\">Why Use the Triple-Equals Operator in JavaScript? — Louis Lazaris</a></li>\n<li>📜 <a href=\"https://www.oreilly.com/learning/what-is-the-difference-between-and-in-javascript\">What is the difference between == and === in JavaScript? — Craig Buckler</a></li>\n<li>📜 <a href=\"https://stackoverflow.com/questions/3787901/why-javascripts-typeof-always-return-object\">Why javascript’s typeof always return “object”? — Stack Overflow</a></li>\n<li>📜 <a href=\"http://tobyho.com/2011/01/28/checking-types-in-javascript/\">Checking Types in Javascript — Toby Ho</a></li>\n<li>📜 <a href=\"https://webbjocke.com/javascript-check-data-types/\">How to better check data types in JavaScript — Webbjocke</a></li>\n<li>📜 <a href=\"https://tomeraberba.ch/html/post/checking-for-the-absence-of-a-value-in-javascript.html\">Checking for the Absence of a Value in JavaScript — Tomer Aberbach</a></li>\n</ul>\n<h3>Videos</h3>\n<ul>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=ol_su88I3kw\">JavaScript - The typeof operator — Java Brains</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=qPYhTPt_SbQ\">Javascript typeof operator — DevDelight</a></li>\n</ul>\n<p><strong><a href=\"#m%E1%BB%A5c-l%E1%BB%A5c\">⬆ Lên đầu trang</a></strong></p>\n<hr>\n<h2>6. Function Scope, Block Scope and Lexical Scope</h2>\n<h3>Bài viết</h3>\n<ul>\n<li>📜 <a href=\"https://github.com/getify/You-Dont-Know-JS/blob/master/scope%20%26%20closures/ch3.md\">You Don’t Know JS: Scope &#x26; Closures [Book] — Kyle Simpson</a></li>\n<li>📜 <a href=\"http://www.deadcoderising.com/2017-04-11-es6-var-let-and-const-the-battle-between-function-scope-and-block-scope/\">The battle between Function Scope and Block Scope — Marius Herring</a></li>\n<li>📜 <a href=\"http://adripofjavascript.com/blog/drips/emulating-block-scope-in-javascript.html\">Emulating Block Scope in JavaScript — Josh Clanton</a></li>\n<li>📜 <a href=\"https://medium.com/@josephcardillo/the-difference-between-function-and-block-scope-in-javascript-4296b2322abe\">The Difference Between Function and Block Scope in JavaScript — Joseph Cardillo</a></li>\n<li>📜 <a href=\"https://edgecoders.com/function-scopes-and-block-scopes-in-javascript-25bbd7f293d7\">Function Scopes and Block Scopes in JavaScript — Samer Buna</a></li>\n<li>📜 <a href=\"http://ryanmorr.com/understanding-scope-and-context-in-javascript/\">Understanding Scope and Context in JavaScript | Ryan Morr</a></li>\n<li>📜 <a href=\"https://css-tricks.com/javascript-scope-closures/\">JavaScript Scope and Closures — Zell Liew</a></li>\n<li>📜 <a href=\"https://developer.telerik.com/topics/web-development/understanding-scope-in-javascript/\">Understanding Scope in JavaScript — Wissam Abirached</a></li>\n<li>📜 <a href=\"http://speakingjs.com/es5/ch16.html\">Speaking JavaScript - Variables: Scopes, Environments, and Closures — Dr. Axel Rauschmayer</a></li>\n<li>📜 <a href=\"https://scotch.io/tutorials/understanding-scope-in-javascript\">Understanding Scope in JavaScript ― Hammad Ahmed</a></li>\n</ul>\n<h3>Videos</h3>\n<ul>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=SBwoFkRjZvE\">What Makes Javascript Weird … and Awesome pt. 4 — LearnCode.academy</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=dhp57T3p760\">Variable Scope in JavaScript — Kirupa Chinnathambi</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=aK_nuUAdr8E\">JavaScript Block Scope and Function Scope — mmtuts</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=GhNA0r10MmA\">What the Heck is Lexical Scope? — NWCalvank</a></li>\n</ul>\n<p><strong><a href=\"#m%E1%BB%A5c-l%E1%BB%A5c\">⬆ Lên đầu trang</a></strong></p>\n<hr>\n<h2>7. Expression vs Statement</h2>\n<h3>Bài viết</h3>\n<ul>\n<li>📜 <a href=\"https://dev.to/promhize/javascript-in-depth-all-you-need-to-know-about-expressions-statements-and-expression-statements-5k2\">All you need to know about Javascript’s Expressions, Statements and Expression Statements — Promise Tochi</a></li>\n<li>📜 <a href=\"https://www.sitepoint.com/function-expressions-vs-declarations/\">Function Expressions vs Function Declarations — Paul Wilkins</a></li>\n<li>📜 <a href=\"https://medium.com/@raviroshan.talk/javascript-function-declaration-vs-expression-f5873b8c7b38\">JavaScript Function — Declaration vs Expression — Ravi Roshan</a></li>\n<li>📜 <a href=\"https://medium.com/@mandeep1012/function-declarations-vs-function-expressions-b43646042052\">Function Declarations vs. Function Expressions — Mandeep Singh</a></li>\n<li>📜 <a href=\"https://javascriptweblog.wordpress.com/2010/07/06/function-declarations-vs-function-expressions/\">Function Declarations vs. Function Expressions — Anguls Croll</a></li>\n</ul>\n<h3>Videos</h3>\n<ul>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=WVyCrI1cHi8\">Expressions vs. Statements in JavaScript — Hexlet</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=3jDpNGJkupA\">JavaScript - Expression vs. Statement — WebTunings</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=oB5rH_9bqAI\">Function Statements and Function Expressions — Codeacademy</a></li>\n</ul>\n<p><strong><a href=\"#m%E1%BB%A5c-l%E1%BB%A5c\">⬆ Lên đầu trang</a></strong></p>\n<hr>\n<h2>8. IIFE, Modules and Namespaces</h2>\n<h3>Bài viết</h3>\n<ul>\n<li>📜 <a href=\"https://medium.com/@vvkchandra/essential-javascript-mastering-immediately-invoked-function-expressions-67791338ddc6\">Mastering Immediately-Invoked Function Expressions ― Chandra Gundamaraju</a></li>\n<li>📜 <a href=\"https://hashnode.com/post/do-es6-modules-make-the-case-of-iifes-obsolete-civ96wet80scqgc538un20es0\">Do ES6 Modules make the case of IIFEs obsolete?</a></li>\n<li>📜 <a href=\"https://www.jvandemo.com/a-10-minute-primer-to-javascript-modules-module-formats-module-loaders-and-module-bundlers/\">A 10 minute primer to JavaScript modules, module formats, module loaders and module bundlers ― Jurgen Van de Moere</a></li>\n<li>📜 <a href=\"http://exploringjs.com/es6/ch_modules.html\">Modules ― Exploring JS</a></li>\n<li>📜 <a href=\"https://hacks.mozilla.org/2018/03/es-modules-a-cartoon-deep-dive/\">ES modules: A cartoon deep-dive — Lin Clark</a></li>\n<li>📜 <a href=\"https://www.sitepoint.com/understanding-es6-modules/\">Understanding ES6 Modules — Craig Buckler</a></li>\n<li>📜 <a href=\"https://blog.cloud66.com/an-overview-of-es6-modules-in-javascript/\">An overview of ES6 Modules in JavaScript — Brent Graham</a></li>\n<li>📜 <a href=\"https://ponyfoo.com/articles/es6-modules-in-depth\">ES6 Modules in Depth — Nicolás Bevacqua</a></li>\n<li>📜 <a href=\"https://medium.com/dailyjs/es6-modules-node-js-and-the-michael-jackson-solution-828dc244b8b\">ES6 modules, Node.js and the Michael Jackson Solution — Alberto Gimeno</a></li>\n<li>📜 <a href=\"https://medium.freecodecamp.org/javascript-modules-a-beginner-s-guide-783f7d7a5fcc\">JavaScript Modules: A Beginner’s Guide — Preethi Kasireddy</a></li>\n</ul>\n<h3>Videos</h3>\n<ul>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=3cbiZV4H22c\">Immediately Invoked Function Expression - Beau teaches JavaScript — freeCodeCamp</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=I5EntfMeIIQ\">Understanding JavaScript IIFE</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=_3oSWwapPKQ\">JavaScript Modules: ES6 Import and Export — Kyle Robinson</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=aQr2bV1BPyE\">ES6 - Modules — Ryan Christiani</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=fIP4pjAqCtQ\">ES6 Modules in the Real World — Sam Thorogood</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=5P04OK6KlXA\">ES6 Modules — TempleCoding</a></li>\n</ul>\n<p><strong><a href=\"#m%E1%BB%A5c-l%E1%BB%A5c\">⬆ Lên đầu trang</a></strong></p>\n<hr>\n<h2>9. Message Queue and Event Loop</h2>\n<h3>Bài viết</h3>\n<ul>\n<li>📜 <a href=\"https://medium.com/front-end-hacking/javascript-event-loop-explained-4cd26af121d4\">JavaScript Event Loop Explained — Anoop Raveendran</a></li>\n<li>📜 <a href=\"https://blog.carbonfive.com/2013/10/27/the-javascript-event-loop-explained/\">The JavaScript Event Loop: Explained — Erin Sweson-Healey</a></li>\n<li>📜 <a href=\"https://www.wptutor.io/web/js/javascript-event-loop\">What is the Event Loop in Javascript — WP Tutor.io</a></li>\n<li>📜 <a href=\"https://hackernoon.com/understanding-js-the-event-loop-959beae3ac40\">Understanding JS: The Event Loop — Alexander Kondov</a></li>\n<li>📜 <a href=\"https://www.zeolearn.com/magazine/understanding-the-javascript-event-loop\">Understanding the JavaScript Event Loop — Ashish Gupta</a></li>\n<li>📜 <a href=\"https://code.likeagirl.io/what-the-heck-is-event-loop-1e414fccef49\">Event Loop in Javascript — Manjula Dube</a></li>\n<li>📜 <a href=\"https://flaviocopes.com/javascript-event-loop/\">The JavaScript Event Loop — Flavio Copes</a></li>\n<li>📜 <a href=\"https://blog.sessionstack.com/how-javascript-works-event-loop-and-the-rise-of-async-programming-5-ways-to-better-coding-with-2f077c4438b5\">How JavaScript works: Event loop — Alexander Zlatkov</a></li>\n</ul>\n<h3>Videos</h3>\n<ul>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=8aGhZQkoFbQ\">What the heck is the event loop anyway? | JSConf EU — Philip Roberts</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=XzXIMZMN9k4\">JavaScript Event Loop — ComScience Simplified</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=6MXRNXXgP_0\">I’m stuck in an Event Loop — Philip Roberts</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=cCOL7MC4Pl0\">In The Loop - Jake Archibald | JSConf.Asia 2018</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=Eqq2Rb7LzYE\">Desmitificando el Event Loop (Spanish)</a></li>\n</ul>\n<p><strong><a href=\"#m%E1%BB%A5c-l%E1%BB%A5c\">⬆ Lên đầu trang</a></strong></p>\n<hr>\n<h2>10. setTimeout, setInterval and requestAnimationFrame</h2>\n<h3>Bài viết</h3>\n<ul>\n<li>📜 <a href=\"https://javascript.info/settimeout-setinterval\">setTimeout and setInterval — JavaScript.Info</a></li>\n<li>📜 <a href=\"https://dev.to/akanksha_9560/why-not-to-use-setinterval--2na9\">Why not to use setInterval — Akanksha Sharma</a></li>\n<li>📜 <a href=\"https://develoger.com/settimeout-vs-setinterval-cff85142555b\">setTimeout VS setInterval — Develoger</a></li>\n<li>📜 <a href=\"https://css-tricks.com/using-requestanimationframe/\">Using requestAnimationFrame — Chris Coyier</a></li>\n<li>📜 <a href=\"http://www.javascriptkit.com/javatutors/requestanimationframe.shtml\">Understanding JavaScript’s requestAnimationFrame() — JavaScript Kit</a></li>\n<li>📜 <a href=\"https://www.amitmerchant.com/Handling-Time-Intervals-In-Javascript/\">Handling time intervals in JavaScript - Amit Merchant</a></li>\n</ul>\n<h3>Videos</h3>\n<ul>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=6bPKyl8WYWI\">Javascript: How setTimeout and setInterval works — Coding Blocks India</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=TbCgGWe8LN8\">setTimeout and setInterval in JavaScript — techsith</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=0VVJSvlUgtg\">JavaScript Timers — Steve Griffith</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=BVALvvy5bZY\">JavaScript setTimeout, setInterval &#x26; clearInterval — DoingITeasyChannel</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=mVKfrWCOB60\">JavaScript setTimeOut and setInterval Explained — Theodore Anderson</a></li>\n</ul>\n<p><strong><a href=\"#m%E1%BB%A5c-l%E1%BB%A5c\">⬆ Lên đầu trang</a></strong></p>\n<hr>\n<h2>11. JavaScript Engines</h2>\n<h3>Bài viết</h3>\n<ul>\n<li>📜 <a href=\"https://kipalog.com/posts/Vai-net-ve-V8---Javascript-Engine-dang-sau-Chrome-va-Node-js\">Vài nét về V8 - Javascript Engine đằng sau Chrome và Node.js</a></li>\n<li>📜 <a href=\"https://techtalk.vn/cach-hoat-dong-cua-javascript-v8-engine-va-5-meo-toi-uu-hoa.html\">Cách thức hoạt động của JavaScript: V8 engine và 5 mẹo tối ưu hóa</a></li>\n<li>📜 <a href=\"http://www.softwaremag.com/javascript-engines/\">JavaScript Engines — Jen Looper</a></li>\n<li>📜 <a href=\"https://medium.freecodecamp.org/understanding-the-core-of-nodejs-the-powerful-chrome-v8-engine-79e7eb8af964\">Understanding How the Chrome V8 Engine Translates JavaScript into Machine Code — DroidHead</a></li>\n<li>📜 <a href=\"https://medium.com/dailyjs/understanding-v8s-bytecode-317d46c94775\">Understanding V8’s Bytecode — Franziska Hinkelmann</a></li>\n<li>📜 <a href=\"http://thibaultlaurens.github.io/javascript/2013/04/29/how-the-v8-engine-works/\">How the V8 engine works? — Thibault Laurens</a></li>\n<li>📜 <a href=\"https://www.mediacurrent.com/blog/brief-history-googles-v8-javascript-engine/\">A Brief History of Google’s V8 Javascript Engine — Clair Smith</a></li>\n<li>📜 <a href=\"https://medium.freecodecamp.org/javascript-essentials-why-you-should-know-how-the-engine-works-c2cc0d321553\">JavaScript essentials: why you should know how the engine works - Rainer Hahnekamp</a></li>\n</ul>\n<h3>Videos</h3>\n<ul>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=uzJ3huwHC0A\">Javascript Chuyên Sâu: Javascript Engine là gì? V8 là sao?</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=5nmpokoRaZI\">JavaScript Engines: The Good Parts™ — Mathias Bynens &#x26; Benedikt Meurer</a></li>\n</ul>\n<p><strong><a href=\"#m%E1%BB%A5c-l%E1%BB%A5c\">⬆ Lên đầu trang</a></strong></p>\n<hr>\n<h2>12. Bitwise Operators, Type Arrays and Array Buffers</h2>\n<h3>Bài viết</h3>\n<ul>\n<li>📜 <a href=\"https://hackernoon.com/programming-with-js-bitwise-operations-393eb0745dc4\">Programming with JS: Bitwise Operations — Alexander Kondov</a></li>\n<li>📜 <a href=\"https://codeburst.io/using-javascript-bitwise-operators-in-real-life-f551a731ff5\">Using JavaScript’s Bitwise Operators in Real Life — ian m</a></li>\n<li>📜 <a href=\"https://www.w3resource.com/javascript/operators/bitwise-operator.php\">JavaScript Bitwise Operators — w3resource</a></li>\n<li>📜 <a href=\"https://medium.com/bother7-blog/bitwise-operators-in-javascript-65c4c69be0d3\">Bitwise Operators in Javascript — Joe Cha</a></li>\n<li>📜 <a href=\"https://medium.com/techtrument/a-comprehensive-primer-on-binary-computation-and-bitwise-operators-in-javascript-81acf8341f04\">A Comprehensive Primer on Binary Computation and Bitwise Operators in Javascript — Paul Brown</a></li>\n</ul>\n<h3>Videos</h3>\n<ul>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=mesu75PTDC8\">JavaScript Bitwise Operators — Programming with Mosh</a></li>\n</ul>\n<p><strong><a href=\"#m%E1%BB%A5c-l%E1%BB%A5c\">⬆ Lên đầu trang</a></strong></p>\n<hr>\n<h2>13. DOM and Layout Trees</h2>\n<h3>Bài viết</h3>\n<ul>\n<li>📜 <a href=\"https://www.digitalocean.com/community/tutorials/introduction-to-the-dom\">How To Understand and Modify the DOM in JavaScript — Tania Rascia</a></li>\n<li>📜 <a href=\"https://medium.freecodecamp.org/whats-the-document-object-model-and-why-you-should-know-how-to-use-it-1a2d0bc5429d\">What’s the Document Object Model, and why you should know how to use it — Leonardo Maldonado</a></li>\n<li>📜 <a href=\"https://www.guru99.com/how-to-use-dom-and-events-in-javascript.html\">JavaScript DOM Tutorial with Example — Guru99</a></li>\n<li>📜 <a href=\"https://css-tricks.com/dom/\">What is the DOM? — Chris Coyier</a></li>\n<li>📜 <a href=\"https://zellwk.com/blog/dom-traversals/\">Traversing the DOM with JavaScript — Zell Liew</a></li>\n<li>📜 <a href=\"https://eloquentjavascript.net/14_dom.html\">Eloquent JavaScript [Book] — The Document Object Model</a></li>\n<li>📜 <a href=\"https://javascript.info/dom-nodes\">DOM Tree</a></li>\n<li>📜 <a href=\"https://medium.com/javascript-in-plain-english/how-to-traverse-the-dom-in-javascript-d6555c335b4e\">How to traverse the DOM in Javascript — Vojislav Grujić</a></li>\n<li>📜 <a href=\"https://developers.google.com/web/fundamentals/performance/critical-rendering-path/render-tree-construction\">Render Tree Construction — Ilya Grigorik</a></li>\n</ul>\n<h3>Videos</h3>\n<ul>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=FIORjGvT0kk\">JavaScript DOM — The Net Ninja</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=0ik6X4DJKCc\">JavaScript DOM Crash Course — Traversy Media</a></li>\n</ul>\n<p><strong><a href=\"#m%E1%BB%A5c-l%E1%BB%A5c\">⬆ Lên đầu trang</a></strong></p>\n<hr>\n<h2>14. Factories and Classes</h2>\n<h3>Bài viết</h3>\n<ul>\n<li>📜 <a href=\"https://www.digitalocean.com/community/tutorials/understanding-classes-in-javascript\">How To Use Classes in JavaScript — Tania Rascia</a></li>\n<li>📜 <a href=\"https://medium.com/tech-tajawal/javascript-classes-under-the-hood-6b26d2667677\">Javascript Classes — Under The Hood — Majid</a></li>\n<li>📜 <a href=\"https://www.javascriptjanuary.com/blog/es6-classes\">ES6 Classes — Nathaniel Foster</a></li>\n<li>📜 <a href=\"https://scotch.io/tutorials/better-javascript-with-es6-pt-ii-a-deep-dive-into-classes\">Better JavaScript with ES6, Pt. II: A Deep Dive into Classes ― Peleke Sengstacke</a></li>\n<li>📜 <a href=\"https://medium.com/front-end-hacking/understand-the-factory-design-pattern-in-plain-javascript-20b348c832bd\">Understand the Factory Design Pattern in Plain JavaScript — Aditya Agarwal</a></li>\n<li>📜 <a href=\"https://medium.com/javascript-scene/javascript-factory-functions-vs-constructor-functions-vs-classes-2f22ceddf33e\">JavaScript Factory Functions vs Constructor Functions vs Classes — Eric Elliott</a></li>\n<li>📜 <a href=\"https://medium.com/javascript-scene/javascript-factory-functions-with-es6-4d224591a8b1\">JavaScript Factory Functions with ES6+ — Eric Elliott</a></li>\n<li>📜 <a href=\"https://atendesigngroup.com/blog/factory-functions-javascript\">Factory Functions in JavaScript — Josh Miller</a></li>\n<li>📜 <a href=\"https://medium.com/@SntsDev/the-factory-pattern-in-js-es6-78f0afad17e9\">The Factory Pattern in JS ES6 — SnstsDev</a></li>\n<li>📜 <a href=\"https://medium.freecodecamp.org/class-vs-factory-function-exploring-the-way-forward-73258b6a8d15\">Class vs Factory function: exploring the way forward — Cristi Salcescu</a></li>\n</ul>\n<h3>Videos</h3>\n<ul>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=jpegXpQpb3o\">JavaScript Factory Functions — Programming with Mosh</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=ImwrezYhw4w\">Factory Functions in JavaScript — Fun Fun Function</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=R7-IwpH80UE\">Javascript Tutorial Function Factories — Crypto Chan</a></li>\n</ul>\n<p><strong><a href=\"#m%E1%BB%A5c-l%E1%BB%A5c\">⬆ Lên đầu trang</a></strong></p>\n<hr>\n<h2>15. this, call, apply and bind</h2>\n<h3>Bài viết</h3>\n<ul>\n<li>📜 <a href=\"https://www.codementor.io/niladrisekhardutta/how-to-call-apply-and-bind-in-javascript-8i1jca6jp\">How-to: call() , apply() and bind() in JavaScript — Niladri Sekhar Dutta</a></li>\n<li>📜 <a href=\"http://javascriptissexy.com/javascript-apply-call-and-bind-methods-are-essential-for-javascript-professionals/\">JavaScript’s Apply, Call, and Bind Methods are Essential for JavaScript Professionals — Richard Bovell</a></li>\n<li>📜 <a href=\"https://tylermcginnis.com/this-keyword-call-apply-bind-javascript/\">WTF is this - Understanding the this keyword, call, apply, and bind in JavaScript — Tyler McGinnis</a></li>\n<li>📜 <a href=\"https://medium.com/@omergoldberg/javascript-call-apply-and-bind-e5c27301f7bb\">Javascript: call(), apply() and bind() — Omer Goldberg</a></li>\n<li>📜 <a href=\"https://medium.com/@ivansifrim/the-differences-between-call-apply-bind-276724bb825b\">The difference between call / apply / bind — Ivan Sifrim</a></li>\n<li>📜 <a href=\"https://tech.io/playgrounds/9799/learn-solve-call-apply-and-bind-methods-in-javascript\">call(), apply() and bind() methods in JavaScript</a></li>\n<li>📜 <a href=\"https://thenewstack.io/mastering-javascript-callbacks-bind-apply-call/\">Mastering ‘this’ in JavaScript: Callbacks and bind(), apply(), call() — Michelle Gienow</a></li>\n<li>📜 <a href=\"https://dev.to/kbk0125/javascripts-apply-call-and-bind-explained-by-hosting-a-cookout-32jo\">JavaScript’s apply, call, and bind explained by hosting a cookout — Kevin Kononenko</a></li>\n<li>📜 <a href=\"https://www.eigenx.com/blog/https/mediumcom/eigen-x/how-and-when-to-use-bind-call-and-apply-in-javascript-77b6f42898fb\">How AND When to use bind, call, and apply in Javascript — Eigen X</a></li>\n<li>📜 <a href=\"https://www.hacksparrow.com/javascript-bind-vs-apply-and-call.html\">JavaScript .bind() vs .apply() and .call() — Hack Sparrow</a></li>\n<li>📜 <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call\">call() — MDN</a></li>\n<li>📜 <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Function/bind\">bind() — MDN</a></li>\n<li>📜 <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\">apply() — MDN</a></li>\n<li>📜 <a href=\"http://blog.brew.com.hk/what-is-this-in-javascript/\">What is ‘this’ in JavaScript? — Daniel Li</a></li>\n<li>📜 <a href=\"https://dev.to/ycmjason/let-me-explain-to-you-what-is-this-javascript-44ja\">Let me explain to you what is <code class=\"language-text\">this</code>. (Javascript) — Jason Yu</a></li>\n</ul>\n<h3>Videos</h3>\n<ul>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=c0mLRpw-9rI\">JavaScript call, apply and bind — techsith</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=AYVYxezrMWA\">JavaScript Practical Applications of Call, Apply and Bind functions— techsith</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=Uy0NOXLBraE\">JavaScript (call, bind, apply) — curious aatma</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=AOSYY1_np_4\">Understanding Functions and ‘this’ In The World of ES2017 — Bryan Hughes</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=GhbhD1HR5vk\">bind and this - Object Creation in JavaScript - FunFunFunction</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=AYVYxezrMWA\">JavaScript Practical Applications of Call, Apply and Bind functions — techsith</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=uBdH0iB1VDM\">JS Function Methods call(), apply(), and bind() — Steve Griffith</a></li>\n</ul>\n<p><strong><a href=\"#m%E1%BB%A5c-l%E1%BB%A5c\">⬆ Lên đầu trang</a></strong></p>\n<hr>\n<h2>16. new, Constructor, instanceof and Instances</h2>\n<h3>Bài viết</h3>\n<ul>\n<li>📜 <a href=\"https://codeburst.io/javascript-for-beginners-the-new-operator-cee35beb669e\">JavaScript For Beginners: the ‘new’ operator — Brandon Morelli</a></li>\n<li>📜 <a href=\"https://medium.freecodecamp.org/demystifying-javascripts-new-keyword-874df126184c\">Let’s demystify JavaScript’s ‘new’ keyword — Cynthia Lee</a></li>\n<li>📜 <a href=\"https://javascript.info/constructor-new\">Constructor, operator “new” — JavaScript.Info</a></li>\n<li>📜 <a href=\"https://css-tricks.com/understanding-javascript-constructors/\">Understanding JavaScript Constructors — Faraz Kelhini</a></li>\n<li>📜 <a href=\"https://openclassrooms.com/en/courses/3523231-learn-to-code-with-javascript/4379006-use-constructor-functions\">Use Constructor Functions — Openclassrooms</a></li>\n<li>📜 <a href=\"http://2ality.com/2017/08/type-right.html\">Beyond <code class=\"language-text\">typeof</code> and <code class=\"language-text\">instanceof</code>: simplifying dynamic type checks — Dr. Axel Rauschmayer</a></li>\n<li>📜 <a href=\"https://appendto.com/2016/10/what-is-the-instanceof-operator-in-javascript/\">What Is the Instanceof Operator in JavaScript — appendTo</a></li>\n<li>📜 <a href=\"http://garyrafferty.com/2012/12/07/JavaScript-instanceof-vs-typeof.html\">JavaScript instanceof vs typeof — Gary Rafferty</a></li>\n<li>📜 <a href=\"https://javascriptrefined.io/function-and-object-instances-of-each-other-1e1095d5faac\">Function and Object, instances of each other — Kiro Risk</a></li>\n</ul>\n<p><strong><a href=\"#m%E1%BB%A5c-l%E1%BB%A5c\">⬆ Lên đầu trang</a></strong></p>\n<hr>\n<h2>17. Prototype Inheritance and Prototype Chain</h2>\n<h3>Bài viết</h3>\n<ul>\n<li>📜 <a href=\"https://medium.com/@parsyval/javascript-prototype-vs-class-a7015d5473b\">Javascript : Prototype vs Class — Valentin PARSY</a></li>\n<li>📜 <a href=\"https://mathiasbynens.be/notes/prototypes\">JavaScript engine fundamentals: optimizing prototypes — Mathias Bynens</a></li>\n<li>📜 <a href=\"https://codeburst.io/javascript-prototype-cb29d82b8809\">JavaScript Prototype — NC Patro</a></li>\n<li>📜 <a href=\"https://www.codementor.io/sandeepranjan2007/prototype-in-javascipt-knbve0lqo\">Prototype in Javascript — Sandeep Ranjan</a></li>\n<li>📜 <a href=\"https://hackernoon.com/prototypes-in-javascript-5bba2990e04b\">Prototypes in JavaScript — Rupesh Mishra</a></li>\n<li>📜 <a href=\"https://medium.freecodecamp.org/prototype-in-js-busted-5547ec68872\">Prototype in JavaScript: it’s quirky, but here’s how it works — Pranav Jindal</a></li>\n<li>📜 <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Inheritance_and_the_prototype_chain\">Inheritance and the prototype chain — MDN</a></li>\n<li>📜 <a href=\"https://medium.com/javascript-scene/master-the-javascript-interview-what-s-the-difference-between-class-prototypal-inheritance-e4cd0a7562e9\">Master the JavaScript Interview: What’s the Difference Between Class &#x26; Prototypal Inheritance? — Eric Elliott</a></li>\n<li>📜 <a href=\"https://hackernoon.com/understanding-javascript-prototype-and-inheritance-d55a9a23bde2\">Understanding JavaScript: Prototype and Inheritance — Alexander Kondov</a></li>\n<li>📜 <a href=\"https://javascript.info/prototype-inheritance\">Prototypal Inheritance — JavaScript.Info</a></li>\n<li>📜 <a href=\"https://www.digitalocean.com/community/tutorials/understanding-prototypes-and-inheritance-in-javascript\">How To Work with Prototypes and Inheritance in JavaScript — Tania Rascia</a></li>\n<li>📜 <a href=\"https://codeburst.io/master-javascript-prototypes-inheritance-d0a9a5a75c4e\">Master JavaScript Prototypes &#x26; Inheritance — Arnav Aggarwal</a></li>\n<li>📜 <a href=\"https://github.com/getify/You-Dont-Know-JS/blob/master/this%20%26%20object%20prototypes/ch5.md\">You Don’t Know JS [Book] Chapter 5: Prototypes — Kyle Simpson</a></li>\n<li>📜 <a href=\"https://medium.freecodecamp.org/understanding-prototypal-inheritance-in-javascript-with-css-93b2fcda75e4\">JavaScript’s Prototypal Inheritance Explained Using CSS — Nash Vail</a></li>\n<li>📜 <a href=\"https://gist.github.com/derhuerst/a585c4916b1c361cc6f0\">Prototypal Inheritance in JavaScript — Jannis Redmann</a></li>\n<li>📜 <a href=\"http://www.competa.com/blog/classical-prototypical-inheritance-javascript/\">Classical and Prototypical Inheritance in JavaScript — Danny Cornelisse</a></li>\n<li>📜 <a href=\"https://scotch.io/tutorials/demystifying-es6-classes-and-prototypal-inheritance\">Demystifying ES6 Classes And Prototypal Inheritance ― Neo Ighodaro</a></li>\n<li>📜 <a href=\"https://dev.to/danny/intro-to-prototypal-inheritance---js-9di\">Intro To Prototypal Inheritance — Dharani Jayakanthan</a></li>\n<li>📜 <a href=\"http://blog.brew.com.hk/classes-in-javascript-explained/\">Classes in JavaScript - Explained — Daniel Li</a></li>\n<li>📜 <a href=\"https://github.com/getify/You-Dont-Know-JS/blob/master/this%20%26%20object%20prototypes/ch4.md\">You Don’t Know JS: this &#x26; Object Prototypes — Kyle Simpson</a></li>\n</ul>\n<h3>Videos</h3>\n<ul>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=sOrtAjyk4lQ\">Javascript Prototype Inheritance — Avelx</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=7oNWNlMrkpc\">JavaScript Prototype Inheritance Explained pt. I — techsith</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=uIlj6_z_wL8\">JavaScript Prototype Inheritance Explained pt. II — techsith</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=qMO-LTOrJaE\">JavaScript Prototype Inheritance Explained — Kyle Robinson</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=G6l5CHl67HQ\">Advanced Javascript - Prototypal Inheritance In 1 Minute</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=phwzuiJJPpQ\">An Overview Of Classical Javascript Classes and Prototypal Inheritance — Pentacode</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=4jb4AYEyhRc\">Object Oriented JavaScript - Prototype — The Net Ninja</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=2rkEbcptR64\">Prototype in JavaScript — kudvenkat</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=oCwCcNvaXAQ\">JavaScript Using Prototypes — O’Reilly</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=XskMWBXNbp0\">A Beginner’s Guide to Javascript’s Prototype — Tyler Mcginnis</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=hS_WqkyUah8\">Prototypes in Javascript - p5.js Tutorial — The Coding Train</a></li>\n</ul>\n<p><strong><a href=\"#m%E1%BB%A5c-l%E1%BB%A5c\">⬆ Lên đầu trang</a></strong></p>\n<hr>\n<h2>18. Object.create and Object.assign</h2>\n<h3>Bài viết</h3>\n<ul>\n<li>📜 <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create\">Object.create() — MDN</a></li>\n<li>📜 <a href=\"https://hackernoon.com/object-create-in-javascript-fa8674df6ed2\">Object.create in JavaScript — Rupesh Mishra</a></li>\n<li>📜 <a href=\"https://www.htmlgoodies.com/beyond/javascript/object.create-the-new-way-to-create-objects-in-javascript.html\">Object.create(): the New Way to Create Objects in JavaScript — Rob Gravelle</a></li>\n<li>📜 <a href=\"http://adripofjavascript.com/blog/drips/basic-inheritance-with-object-create.html\">Basic Inheritance with Object.create — Joshua Clanton</a></li>\n<li>📜 <a href=\"https://www.geeksforgeeks.org/object-create-javascript/\">Object.create() In JavaScript — GeeksforGeeks</a></li>\n<li>📜 <a href=\"https://medium.com/@jonathanvox01/understanding-the-difference-between-object-create-and-the-new-operator-b2a2f4749358\">Understanding the difference between Object.create() and the new operator — Jonathan Voxland</a></li>\n<li>📜 <a href=\"https://www.sitepoint.com/javascript-object-creation-patterns-best-practises/\">JavaScript Object Creation: Patterns and Best Practices — Jeff Mott</a></li>\n<li>📜 <a href=\"https://alligator.io/js/dealing-with-objects/\">Dealing With Objects in JavaScript With Object.assign, Object.keys and hasOwnProperty</a></li>\n<li>📜 <a href=\"https://scotch.io/bar-talk/copying-objects-in-javascript\">Copying Objects in JavaScript ― Orinami Olatunji</a></li>\n<li>📜 <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\">Object.assign() — MDN</a></li>\n<li>📜 <a href=\"https://codeburst.io/javascript-object-assign-bc9696dcbb6e\">JavaScript: Object.assign() — Thiago S. Adriano</a></li>\n</ul>\n<h3>Videos</h3>\n<ul>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=aw7NfYhR5rc\">Object.assign() explained — Aaron Writes Code</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=9Ky4X6inpi4\">Object.assign() Method — techsith</a></li>\n</ul>\n<p><strong><a href=\"#m%E1%BB%A5c-l%E1%BB%A5c\">⬆ Lên đầu trang</a></strong></p>\n<hr>\n<h2>19. map, reduce, filter</h2>\n<h3>Bài viết</h3>\n<ul>\n<li>📜 <a href=\"https://medium.com/jsguru/javascript-functional-programming-map-filter-and-reduce-846ff9ba492d\">JavaScript Functional Programming — map, filter and reduce — Bojan Gvozderac</a></li>\n<li>📜 <a href=\"https://medium.com/@joomiguelcunha/learn-map-filter-and-reduce-in-javascript-ea59009593c4\">Learn map, filter and reduce in Javascript — João Miguel Cunha</a></li>\n<li>📜 <a href=\"https://danmartensen.svbtle.com/javascripts-map-reduce-and-filter\">JavaScript’s Map, Reduce, and Filter — Dan Martensen</a></li>\n<li>📜 <a href=\"https://code.tutsplus.com/tutorials/how-to-use-map-filter-reduce-in-javascript--cms-26209\">How to Use Map, Filter, &#x26; Reduce in JavaScript — Peleke Sengstacke</a></li>\n<li>📜 <a href=\"https://codeburst.io/javascript-learn-to-chain-map-filter-and-reduce-acd2d0562cd4\">JavaScript — Learn to Chain Map, Filter, and Reduce — Brandon Morelli</a></li>\n<li>📜 <a href=\"https://codeburst.io/write-beautiful-javascript-with-%CE%BB-fp-es6-350cd64ab5bf\">Javascript data structure with map, reduce, filter and ES6 — Deepak Gupta</a></li>\n<li>📜 <a href=\"https://hackernoon.com/understanding-map-filter-and-reduce-in-javascript-5df1c7eee464\">Understanding map, filter and reduce in Javascript — Luuk Gruijs</a></li>\n<li>📜 <a href=\"https://hackernoon.com/functional-programming-in-js-map-filter-reduce-pt-5-308a205fdd5f\">Functional Programming in JS: map, filter, reduce (Pt. 5) — Omer Goldberg</a></li>\n<li>📜 <a href=\"https://wsvincent.com/functional-javascript-map-filter-reduce/\">JavaScript: Map, Filter, Reduce — William S. Vincent</a></li>\n<li>📜 <a href=\"https://www.sitepoint.com/es6-arrow-functions-new-fat-concise-syntax-javascript/\">Arrow Functions: Fat and Concise Syntax in JavaScript — Kyle Pennell</a></li>\n<li>📜 <a href=\"https://codeburst.io/javascript-arrow-functions-for-beginners-926947fc0cdc\">JavaScript: Arrow Functions for Beginners — Brandon Morelli</a></li>\n<li>📜 <a href=\"https://medium.freecodecamp.org/when-and-why-you-should-use-es6-arrow-functions-and-when-you-shouldnt-3d851d7f0b26\">When (and why) you should use ES6 arrow functions — and when you shouldn’t — Cynthia Lee</a></li>\n<li>📜 <a href=\"https://codeburst.io/javascript-learn-understand-arrow-functions-fe2083533946\">JavaScript — Learn &#x26; Understand Arrow Functions — Brandon Morelli</a></li>\n<li>📜 <a href=\"https://medium.com/podiihq/javascript-arrow-functions-27d4c3334b83\">(JavaScript )=> Arrow functions — sigu</a></li>\n<li>📜 <a href=\"https://www.linkedin.com/pulse/possibility-use-asyncawait-filter-find-foreach-map-reduce-geeganage/\">A possibility to use Async/Await for filter(), find(), forEach(), map() and reduce() methods in Array - Ruwan Geeganage</a></li>\n</ul>\n<h3>Videos</h3>\n<ul>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=UXiYii0Y7Nw\">Map, Filter and Reduce — Lydia Hallie</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=vytzLlY_wmU\">Functional JavaScript: Map, forEach, Reduce, Filter — Theodore Anderson</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=qTeeVd8hOFY\">JavaScript Array superpowers: Map, Filter, Reduce (part I) — Michael Rosata</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=gIm9xLYudL0\">JavaScript Array superpowers: Map, Filter, Reduce (part 2) — Michael Rosata</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=zYBeEPxNSbw\">JavaScript Higher Order Functions - Filter, Map, Sort &#x26; Reduce — Epicop</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=4qWlqD0yYTU\">[Array Methods 2/3] .filter + .map + .reduce — CodeWithNick</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=6sQDTgOqh-I\">Arrow functions in JavaScript - What, Why and How — Fun Fun Function</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=e-5obm1G_FY&#x26;t=1521s\">Learning Functional Programming with JavaScript — Anjana Vakil - JSUnconf</a></li>\n</ul>\n<p><strong><a href=\"#m%E1%BB%A5c-l%E1%BB%A5c\">⬆ Lên đầu trang</a></strong></p>\n<hr>\n<h2>20. Pure Functions, Side Effects and State Mutation</h2>\n<h3>Bài viết</h3>\n<ul>\n<li>📜 <a href=\"https://hackernoon.com/javascript-and-functional-programming-pt-3-pure-functions-d572bb52e21c\">Javascript and Functional Programming — Pure Functions — Omer Goldberg</a></li>\n<li>📜 <a href=\"https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-pure-function-d1c076bec976\">Master the JavaScript Interview: What is a Pure Function? — Eric Elliott</a></li>\n<li>📜 <a href=\"https://medium.com/@jamesjefferyuk/javascript-what-are-pure-functions-4d4d5392d49c\">JavaScript: What Are Pure Functions And Why Use Them? — James Jeffery</a></li>\n<li>📜 <a href=\"http://www.nicoespeon.com/en/2015/01/pure-functions-javascript/\">Pure functions in JavaScript — @nicoespeon</a></li>\n<li>📜 <a href=\"https://www.sitepoint.com/functional-programming-pure-functions/\">Functional Programming: Pure Functions — Arne Brasseur</a></li>\n<li>📜 <a href=\"https://appdividend.com/2017/04/10/pure-functions-in-javascript/\">Pure Functions In Javascript — Krunal</a></li>\n<li>📜 <a href=\"https://alistapart.com/article/making-your-javascript-pure\">Making your JavaScript Pure — Jack Franklin</a></li>\n<li>📜 <a href=\"https://slemgrim.com/mutate-or-not-to-mutate/\">To mutate, or not to mutate, in JavaScript</a></li>\n<li>📜 <a href=\"https://medium.com/@fknussel/arrays-objects-and-mutations-6b23348b54aa\">Arrays, Objects and Mutations — Federico Knüssel</a></li>\n<li>📜 <a href=\"https://medium.com/dailyjs/the-state-of-immutability-169d2cd11310\">The State of Immutability — Maciej Sikora</a></li>\n<li>📜 <a href=\"https://jrsinclair.com/articles/2018/how-to-deal-with-dirty-side-effects-in-your-pure-functional-javascript/\">How to deal with dirty side effects in your pure functional JavaScript — James Sinclair</a></li>\n<li>📜 <a href=\"https://davidwalsh.name/preventing-sideeffects-javascript\">Preventing Side Effects in JavaScript — David Walsh</a></li>\n</ul>\n<h3>Videos</h3>\n<ul>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=dZ41D6LDSBg\">Pure Functions — Hexlet</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=Jh_Uzqzz_wM\">Pure Functions - Functional Programming in JavaScript — Paul McBride</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=frT3H-eBmPc\">JavaScript Pure Functions — Seth Alexander</a></li>\n</ul>\n<p><strong><a href=\"#m%E1%BB%A5c-l%E1%BB%A5c\">⬆ Lên đầu trang</a></strong></p>\n<hr>\n<h2>21. Closures</h2>\n<h3>Bài viết</h3>\n<ul>\n<li>📜 <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures\">Closures — MDN</a></li>\n<li>📜 <a href=\"https://medium.com/dailyjs/i-never-understood-javascript-closures-9663703368e8\">I never understood JavaScript closures — Olivier De Meulder</a></li>\n<li>📜 <a href=\"https://javascript.info/closure\">Closure — JavaScript.Info</a></li>\n<li>📜 <a href=\"http://javascriptissexy.com/understand-javascript-closures-with-ease/\">Understand JavaScript Closures With Ease — Richard Bovell</a></li>\n<li>📜 <a href=\"https://codeburst.io/understanding-javascript-closures-da6aab330302\">Understanding JavaScript Closures — Codesmith</a></li>\n<li>📜 <a href=\"https://codeburst.io/understand-closures-in-javascript-d07852fa51e7\">Understand Closures in JavaScript — Brandon Morelli</a></li>\n<li>📜 <a href=\"https://medium.freecodecamp.org/javascript-closures-simplified-d0d23fa06ba4\">A simple guide to help you understand closures in JavaScript — Prashant Ram</a></li>\n<li>📜 <a href=\"https://scotch.io/tutorials/understanding-javascript-closures-a-practical-approach\">Understanding JavaScript Closures: A Practical Approach — Paul Upendo</a></li>\n<li>📜 <a href=\"https://hackernoon.com/understanding-javascript-closures-4188edf5ea1b\">Understanding JavaScript: Closures — Alexander Kondov</a></li>\n<li>📜 <a href=\"https://hackernoon.com/how-to-use-javascript-closures-with-confidence-85cd1f841a6b\">How to use JavaScript closures with confidence — Léna Faure</a></li>\n<li>📜 <a href=\"https://howchoo.com/g/mge2mji2mtq/javascript-closures-by-example\">JavaScript closures by example — tyler</a></li>\n</ul>\n<h3>Videos</h3>\n<ul>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=71AtaJpJHw0\">Javascript Closure — techsith</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=CQqwU2Ixu-U\">Closures — Fun Fun Function</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=-xqJo5VRP4A\">Closures in JavaScript — techsith</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=yiEeiMN2Khs\">JavaScript Closures 101: What is a closure? — JavaScript Tutorials</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=1JsJx1x35c0\">Closures — freeCodeCamp</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=-rLrGAXK8WE\">JavaScript Closures — CodeWorkr</a></li>\n</ul>\n<p><strong><a href=\"#m%E1%BB%A5c-l%E1%BB%A5c\">⬆ Lên đầu trang</a></strong></p>\n<hr>\n<h2>22. High Order Functions</h2>\n<h3>Bài viết</h3>\n<ul>\n<li>📜 <a href=\"https://chungnguyen.xyz/posts/higher-order-functions-la-gi-va-duoc-su-dung-nhu-the-nao\">Higher Order Functions là gì và được sử dụng như thế nào?</a></li>\n<li>📜 <a href=\"https://eloquentjavascript.net/05_higher_order.html\">Higher-Order Functions — Eloquent JavaScript [Book]</a></li>\n<li>📜 <a href=\"https://www.sitepoint.com/higher-order-functions-javascript/\">Higher-Order Functions in JavaScript — M. David Green</a></li>\n<li>📜 <a href=\"https://medium.freecodecamp.org/higher-order-functions-in-javascript-d9101f9cf528\">Higher Order Functions: Using Filter, Map and Reduce for More Maintainable Code — Guido Schmitz</a></li>\n<li>📜 <a href=\"https://hackernoon.com/effective-functional-javascript-first-class-and-higher-order-functions-713fde8df50a\">First-class and Higher Order Functions: Effective Functional JavaScript — Hugo Di Francesco</a></li>\n<li>📜 <a href=\"https://www.lullabot.com/articles/higher-order-functions-in-javascript\">Higher Order Functions in JavaScript — John Hannah</a></li>\n<li>📜 <a href=\"http://javascriptissexy.com/tag/higher-order-functions/\">Higher-order Functions — Richard Bovell</a></li>\n<li>📜 <a href=\"http://www.zsoltnagy.eu/higher-order-functions-in-javascript/\">Higher Order Functions in JavaScript — Zsolt Nagy</a></li>\n<li>📜 <a href=\"https://derickbailey.com/2015/10/21/fun-with-higher-order-functions-in-javascript/\">Fun With Higher Order Functions In JavaScript — Derick</a></li>\n<li>📜 <a href=\"https://github.com/pedroapfilho/high-order-functions\">Just a reminder on how to use high order functions — Pedro Filho</a></li>\n<li>📜 <a href=\"https://hackernoon.com/how-to-use-javascript-closures-with-confidence-85cd1f841a6b\">How to use JavaScript closures with confidence — Léna Faure</a></li>\n<li>📜 <a href=\"https://howchoo.com/g/mge2mji2mtq/javascript-closures-by-example\">JavaScript closures by example — tyler</a></li>\n</ul>\n<h3>Videos</h3>\n<ul>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=rRgD1yVwIvE\">JavaScript Higher Order Functions &#x26; Arrays — Traversy Media</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=BMUiFMZr7vk\">Higher Order Functions — Fun Fun Function</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=dTlpYnmBW9I\">Higher Order Functions in Javascript — Raja Yogan</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=GYRMNp1SKXA\">Higher Order Iterators in JavaScript — Fun Fun Function</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=H4awPsyugS0\">Higher Order Functions in JavaScript — The Coding Train</a></li>\n</ul>\n<p><strong><a href=\"#m%E1%BB%A5c-l%E1%BB%A5c\">⬆ Lên đầu trang</a></strong></p>\n<hr>\n<h2>23. Recursion</h2>\n<h3>Bài viết</h3>\n<ul>\n<li>📜 <a href=\"https://medium.freecodecamp.org/recursion-in-javascript-1608032c7a1f\">Recursion in JavaScript — Kevin Ennis</a></li>\n<li>📜 <a href=\"https://medium.com/@zfrisch/understanding-recursion-in-javascript-992e96449e03\">Understanding Recursion in JavaScript — Zak Frisch</a></li>\n<li>📜 <a href=\"https://codeburst.io/learn-and-understand-recursion-in-javascript-b588218e87ea\">Learn and Understand Recursion in JavaScript — Brandon Morelli</a></li>\n<li>📜 <a href=\"https://www.sitepoint.com/recursion-functional-javascript/\">Recursion in Functional JavaScript — M. David Green</a></li>\n<li>📜 <a href=\"https://hackernoon.com/programming-with-js-recursion-31371e2bf808\">Programming with JS: Recursion — Alexander Kondov</a></li>\n<li>📜 <a href=\"https://dev.to/simov/anonymous-recursion-in-javascript\">Anonymous Recursion in JavaScript — simo</a></li>\n<li>📜 <a href=\"http://www.jstips.co/en/javascript/recursion-iteration-and-tail-calls-in-js/\">Recursion, iteration and tail calls in JS — loverajoel</a></li>\n<li>📜 <a href=\"https://www.thecodingdelight.com/understanding-recursion-javascript/\">Understanding Recursion in JavaScript with Confidence — Jay</a></li>\n</ul>\n<h3>Videos</h3>\n<ul>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=VtG0WAUvq2w\">Recursion In JavaScript — techsith</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=k7-N8R0-KY4\">Recursion — Fun Fun Function</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=vLhHyGTkjCs\">Recursion and Recursive Functions — Hexlet</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=kGXVsd8pBLw\">Recursion: Recursion() — JS Monthly — Lucas da Costa</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=uyjsR9eNTIw\">Recursive Function in JavaScript — kudvenkat</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=Mv9NEXX1VHc\">What on Earth is Recursion? — Computerphile</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=9NO5dXSlbv8\">Javascript Tutorial 34: Introduction To Recursion — codedamn</a></li>\n</ul>\n<p><strong><a href=\"#m%E1%BB%A5c-l%E1%BB%A5c\">⬆ Lên đầu trang</a></strong></p>\n<hr>\n<h2>24. Collections and Generators</h2>\n<h3>Bài viết</h3>\n<ul>\n<li>📜 <a href=\"https://hacks.mozilla.org/2015/06/es6-in-depth-collections/\">ES6 In Depth: Collections — Jason Orendorff</a></li>\n<li>📜 <a href=\"https://www.sitepoint.com/es6-collections-map-set-weakmap-weakset/\">ES6 Collections: Using Map, Set, WeakMap, WeakSet — Kyle Pennell</a></li>\n<li>📜 <a href=\"https://ponyfoo.com/articles/es6-weakmaps-sets-and-weaksets-in-depth\">ES6 WeakMaps, Sets, and WeakSets in Depth — Nicolás Bevacqua</a></li>\n<li>📜 <a href=\"https://alligator.io/js/sets-introduction/\">Introduction to Sets in JavaScript — Alligator.io</a></li>\n<li>📜 <a href=\"https://alligator.io/js/maps-introduction/\">Introduction to Maps in JavaScript — Alligator.io</a></li>\n<li>📜 <a href=\"https://javascript.info/map-set-weakmap-weakset\">Map, Set, WeakMap and WeakSet — JavaScript.Info</a></li>\n<li>📜 <a href=\"https://dev.to/mildrenben/maps-in-es6---a-quick-guide-35pk\">Maps in ES6 - A Quick Guide — Ben Mildren</a></li>\n<li>📜 <a href=\"https://medium.com/front-end-hacking/es6-set-vs-array-what-and-when-efc055655e1a\">ES6 — Set vs Array — What and when? — Maya Shavin</a></li>\n<li>📜 <a href=\"https://medium.com/front-end-hacking/es6-map-vs-object-what-and-when-b80621932373\">ES6 — Map vs Object — What and when? — Maya Shavin</a></li>\n<li>📜 <a href=\"http://www.deadcoderising.com/es6-working-with-sets-in-javascript/\">ES6: Working with Sets in JavaScript — Dead Code Rising</a></li>\n<li>📜 <a href=\"https://codeburst.io/array-vs-set-vs-map-vs-object-real-time-use-cases-in-javascript-es6-47ee3295329b\">Array vs Set vs Map vs Object — Real-time use cases in Javascript (ES6/ES7) — Rajesh Babu</a></li>\n<li>📜 <a href=\"https://dev.to/claireparker/how-to-create-an-array-of-unique-values-in-javascript-using-sets-5dg6\">How to create an array of unique values in JavaScript using Sets — Claire Parker-Jones</a></li>\n<li>📜 <a href=\"https://hackernoon.com/what-you-should-know-about-es6-maps-dc66af6b9a1e\">What You Should Know About ES6 Maps — Just Chris</a></li>\n<li>📜 <a href=\"https://ponyfoo.com/articles/es6-maps-in-depth\">ES6 Maps in Depth — Nicolás Bevacqua</a></li>\n<li>📜 <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator\">Generator — MDN web docs</a></li>\n<li>📜 <a href=\"https://codeburst.io/what-are-javascript-generators-and-how-to-use-them-c6f2713fd12e\">What are JavaScript Generators and how to use them — Vladislav Stepanov</a></li>\n<li>📜 <a href=\"https://codeburst.io/understanding-generators-in-es6-javascript-with-examples-6728834016d5\">Understanding JavaScript Generators With Examples — Arfat Salman</a></li>\n<li>📜 <a href=\"https://davidwalsh.name/es6-generators\">The Basics of ES6 Generators — Kyle Simpson</a></li>\n</ul>\n<h3>Videos</h3>\n<ul>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=ycohYSx5h9w\">JavaScript ES6 / ES2015 Set, Map, WeakSet and WeakMap — Traversy Media</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=m4abICrldQI\">The Differences between ES6 Maps and Sets — Steve Griffith</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=QO07THdLWQo\">Javascript Generators - THEY CHANGE EVERYTHING - ES6 Generators Harmony Generators — LearnCode.academy</a></li>\n</ul>\n<p><strong><a href=\"#m%E1%BB%A5c-l%E1%BB%A5c\">⬆ Lên đầu trang</a></strong></p>\n<hr>\n<h2>25. Promises</h2>\n<h3>Bài viết</h3>\n<ul>\n<li>📜 <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\">Promise — MDN</a></li>\n<li>📜 <a href=\"https://scotch.io/tutorials/javascript-promises-for-dummies\">JavaScript Promises for Dummies ― Jecelyn Yeen</a></li>\n<li>📜 <a href=\"https://hackernoon.com/understanding-promises-in-javascript-13d99df067c1\">Understanding promises in JavaScript — Gokul N K</a></li>\n<li>📜 <a href=\"https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-promise-27fc71e77261\">Master the JavaScript Interview: What is a Promise? — Eric Elliott</a></li>\n<li>📜 <a href=\"https://www.sitepoint.com/overview-javascript-promises/\">An Overview of JavaScript Promises — Sandeep Panda</a></li>\n<li>📜 <a href=\"https://medium.freecodecamp.org/promises-in-javascript-explained-277b98850de\">How to use Promises in JavaScript — Prashant Ram</a></li>\n<li>📜 <a href=\"https://medium.freecodecamp.org/how-to-implement-promises-in-javascript-1ce2680a7f51\">Implementing Promises In JavaScript — Maciej Cieslar</a></li>\n<li>📜 <a href=\"https://codeburst.io/javascript-promises-explained-with-simple-real-life-analogies-dd6908092138\">JavaScript: Promises explained with simple real life analogies — Shruti Kapoor</a></li>\n<li>📜 <a href=\"http://exploringjs.com/es6/ch_promises.html\">Promises for Asynchronous Programming — Exploring JS</a></li>\n<li>📜 <a href=\"https://blog.codeanalogies.com/2018/08/26/javascript-promises-explained-by-gambling-at-a-casino/\">JavaScript Promises Explained By Gambling At A Casino — Kevin Kononenko</a></li>\n<li>📜 <a href=\"https://medium.com/datafire-io/es6-promises-patterns-and-anti-patterns-bbb21a5d0918\">ES6 Promises: Patterns and Anti-Patterns — Bobby Brennan</a></li>\n<li>📜 <a href=\"https://codeburst.io/a-simple-guide-to-es6-promises-d71bacd2e13a\">A Simple Guide to ES6 Promises — Brandon Morelli</a></li>\n<li>📜 <a href=\"https://codeburst.io/the-es6-promises-87a979ab27e4\">The ES6 Promises — Manoj Singh Negi</a></li>\n<li>📜 <a href=\"https://ponyfoo.com/articles/es6-promises-in-depth\">ES6 Promises in Depth — Nicolás Bevacqua</a></li>\n</ul>\n<h3>Videos</h3>\n<ul>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=vQ3MoXnKfuQ\">Let’s Learn ES6 - Promises — Ryan Christiani</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=XJEHuBZQ5dU\">JavaScript ES6 / ES2015 Promises — Traversy Media</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=2d7s3spWAzo\">Promises — Fun Fun Function</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=f8IgdnYIwOU\">Error Handling Promises in JavaScript — Fun Fun Function</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=QO4NXhWo_NM\">Promises Part 1 - Topics of JavaScript/ES6 — The Coding Train</a></li>\n</ul>\n<p><strong><a href=\"#m%E1%BB%A5c-l%E1%BB%A5c\">⬆ Lên đầu trang</a></strong></p>\n<hr>\n<h2>26. async/await</h2>\n<h3>Bài viết</h3>\n<ul>\n<li>📜 <a href=\"https://javascript.info/async-await\">async/await — JavaScript.Info</a></li>\n<li>📜 <a href=\"https://hackernoon.com/understanding-async-await-in-javascript-1d81bb079b2c\">Understanding async/await in Javascript — Gokul N K</a></li>\n<li>📜 <a href=\"https://eloquentjavascript.net/11_async.html\">Asynchronous Programming — Eloquent JavaScript</a></li>\n<li>📜 <a href=\"https://alligator.io/js/async-functions/\">Exploring Async/Await Functions in JavaScript — Alligator.io</a></li>\n<li>📜 <a href=\"https://scotch.io/tutorials/asynchronous-javascript-using-async-await\">Asynchronous Javascript using async/await — Joy Warugu</a></li>\n<li>📜 <a href=\"https://flaviocopes.com/javascript-async-await/\">Modern Asynchronous JavaScript with async/await — Flavio Copes</a></li>\n<li>📜 <a href=\"https://www.toptal.com/javascript/asynchronous-javascript-async-await-tutorial\">Asynchronous JavaScript: From Callback Hell to Async and Await — Demir Selmanovic</a></li>\n<li>📜 <a href=\"https://medium.com/@_bengarrison/javascript-es8-introducing-async-await-functions-7a471ec7de8a\">Javascript — ES8 Introducing async/await Functions — Ben Garrison</a></li>\n<li>📜 <a href=\"https://medium.freecodecamp.org/avoiding-the-async-await-hell-c77a0fb71c4c\">How to escape async/await hell — Aditya Agarwal</a></li>\n<li>📜 <a href=\"https://ponyfoo.com/articles/understanding-javascript-async-await\">Understanding JavaScript’s async await — Nicolás Bevacqua</a></li>\n<li>📜 <a href=\"https://techbrij.com/javascript-async-await-parallel-sequence\">JavaScript Async/Await: Serial, Parallel and Complex Flow — TechBrij</a></li>\n<li>📜 <a href=\"http://exploringjs.com/es6/ch_async.html\">Asynchronous Programming — Exploring JS</a></li>\n<li>📜 <a href=\"https://blog.pusher.com/promises-async-await/\">From JavaScript Promises to Async/Await: why bother? — Chris Nwamba</a></li>\n<li>📜 <a href=\"https://www.sitepoint.com/flow-control-callbacks-promises-async-await/\">Flow Control in Modern JS: Callbacks to Promises to Async/Await — Craig Buckler</a></li>\n<li>📜 <a href=\"https://dzone.com/articles/javascript-promises-and-why-asyncawait-wins-the-ba\">JavaScript: Promises and Why Async/Await Wins the Battle — Nick Parsons</a></li>\n</ul>\n<h3>Videos</h3>\n<ul>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=9YkUCxvaLEk\">Async + Await — Wes Bos</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=SrNQS8J67zc\">Asynchrony: Under the Hood — Shelley Vohr</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=568g8hxJJp4&#x26;index=3&#x26;list=PL0zVEGEvSaeHJppaRLrqjeTPnCH6\">async/await in JavaScript - What, Why and How — Fun Fun Function</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=XO77Fib9tSI&#x26;index=3&#x26;list=PLRqwX-V7Uu6bKLPQvPRNNE65kBL62mVfx\">async/await Part 1 - Topics of JavaScript/ES8 — The Coding Train</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=chavThlNz3s&#x26;index=4&#x26;list=PLRqwX-V7Uu6bKLPQvPRNNE65kBL62mVfx\">async/await Part 2 - Topics of JavaScript/ES8 — The Coding Train</a></li>\n</ul>\n<p><strong><a href=\"#m%E1%BB%A5c-l%E1%BB%A5c\">⬆ Lên đầu trang</a></strong></p>\n<hr>\n<h2>27. Data Structures</h2>\n<h3>Bài viết</h3>\n<ul>\n<li>📜 <a href=\"https://medium.com/siliconwat/data-structures-in-javascript-1b9aed0ea17c\">Data Structures in JavaScript — Thon Ly</a></li>\n<li>📜 <a href=\"https://itnext.io/algorithms-and-data-structures-in-javascript-a71548f902cb\">Algorithms and Data Structures in JavaScript — Oleksii Trekhleb</a></li>\n<li>📜 <a href=\"https://scotch.io/courses/10-need-to-know-javascript-concepts/data-structures-objects-and-arrays\">Data Structures: Objects and Arrays ― Chris Nwamba</a></li>\n<li>📜 <a href=\"http://blog.benoitvallon.com/data-structures-in-javascript/data-structures-in-javascript/\">Data structures in JavaScript — Benoit Vallon</a></li>\n<li>📜 <a href=\"https://blog.cloudboost.io/playing-with-data-structures-in-javascript-stack-a55ebe50f29d\">Playing with Data Structures in Javascript — Anish K.</a></li>\n<li>📜 <a href=\"https://hackernoon.com/the-little-guide-of-queue-in-javascript-4f67e79260d9\">The Little Guide of Queue in JavaScript — Germán Cutraro</a></li>\n<li>📜 <a href=\"https://github.com/barretlee/algorithms\">All algorithms writing with JavaScript in the book ‘Algorithms Fourth Edition’</a></li>\n<li>📜 <a href=\"https://github.com/nzakas/computer-science-in-javascript\">Collection of classic computer science paradigms in JavaScript</a></li>\n<li>📜 <a href=\"https://github.com/jamiebuilds/itsy-bitsy-data-structures\">All the things you didn’t know you wanted to know about data structures</a></li>\n</ul>\n<h3>Videos</h3>\n<ul>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=PylQlISSH8U&#x26;list=PLujX4CIdBGCa-65N3uN8CDbUMrYsHBrz-\">Algorithms in JavaScript — Seth Koch</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=H_EBPZgiAas&#x26;list=PLDmvslp_VR0zYUSth_8O69p4_cmvZEgLa\">Algorithms In Javascript | Ace Your Interview — Eduonix Learning Solutions</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=Gj5qBheGOEo&#x26;list=PLWKjhJtqVAbkso-IbgiiP48n-O-JQA9PJ\">Data Structures and Algorithms in JavaScript — freeCodeCamp</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=Ymh_AurrMbA\">Learning JavaScript Data Structures and Algorithms: Sorting — Packt Video</a></li>\n</ul>\n<p><strong><a href=\"#m%E1%BB%A5c-l%E1%BB%A5c\">⬆ Lên đầu trang</a></strong></p>\n<hr>\n<h2>28. Expensive Operation and Big O Notation</h2>\n<h3>Bài viết</h3>\n<ul>\n<li>📜 <a href=\"https://medium.com/cesars-tech-insights/big-o-notation-javascript-25c79f50b19b\">Big O Notation in Javascript — César Antón Dorantes</a></li>\n<li>📜 <a href=\"https://medium.com/javascript-scene/time-complexity-big-o-notation-1a4310c3ee4b\">Time Complexity/Big O Notation — Tim Roberts</a></li>\n<li>📜 <a href=\"https://medium.com/@gmedina229/big-o-in-javascript-36ff67766051\">Big O in JavaScript — Gabriela Medina</a></li>\n<li>📜 <a href=\"http://www.bradoncode.com/blog/2012/04/big-o-algorithm-examples-in-javascript.html\">Big O Search Algorithms in JavaScript — Bradley Braithwaite</a></li>\n<li>📜 <a href=\"https://www.jenniferbland.com/time-complexity-analysis-in-javascript/\">Time Complexity Analysis in JavaScript — Jennifer Bland</a></li>\n<li>📜 <a href=\"https://medium.freecodecamp.org/time-is-complex-but-priceless-f0abd015063c\">Algorithms in plain English: time complexity and Big-O Notation — Michael Olorunnisola</a></li>\n</ul>\n<h3>Videos</h3>\n<ul>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=HgA5VOFan5E\">JavaScript: Intro to Big O Notation and Function Runtime — Eric Traub</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=KatlvCFHPRo\">Essential Big O for JavaScript Developers — Dave Smith</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=ALl86xJiTD8\">Big O Notation - Time Complexity Analysis — WebTunings</a></li>\n</ul>\n<p><strong><a href=\"#m%E1%BB%A5c-l%E1%BB%A5c\">⬆ Lên đầu trang</a></strong></p>\n<hr>\n<h2>29. Algorithms</h2>\n<h3>Bài viết</h3>\n<ul>\n<li>📜 <a href=\"https://github.com/Crizstian/data-structure-and-algorithms-with-ES6\">Data Structures and Algorithms using ES6</a></li>\n<li>📜 <a href=\"https://github.com/trekhleb/javascript-algorithms\">Algorithms and data structures implemented in JavaScript with explanations and links to further readings</a></li>\n<li>📜 <a href=\"http://www.thatjsdude.com/interview/js1.html\">JS: Interview Algorithm</a></li>\n<li>📜 <a href=\"https://medium.com/siliconwat/algorithms-in-javascript-b0bed68f4038\">Algorithms in JavaScript — Thon Ly</a></li>\n<li>📜 <a href=\"https://medium.freecodecamp.org/javascript-objects-square-brackets-and-algorithms-e9a2916dc158\">JavaScript Objects, Square Brackets and Algorithms — Dmitri Grabov</a></li>\n<li>📜 <a href=\"https://github.com/felipernb/algorithms.js\">Atwood’s Law applied to CS101 - Classic algorithms and data structures implemented in JavaScript</a></li>\n<li>📜 <a href=\"https://github.com/yangshun/lago\">Data Structures and Algorithms library in JavaScript</a></li>\n<li>📜 <a href=\"https://github.com/idosela/algorithms-in-javascript\">Collection of computer science algorithms and data structures written in JavaScript</a></li>\n</ul>\n<p><strong><a href=\"#m%E1%BB%A5c-l%E1%BB%A5c\">⬆ Lên đầu trang</a></strong></p>\n<hr>\n<h2>30. Inheritance, Polymorphism and Code Reuse</h2>\n<h3>Bài viết</h3>\n<ul>\n<li>📜 <a href=\"https://javascript.info/class-inheritance\">Class inheritance, super — JavaScript.Info</a></li>\n<li>📜 <a href=\"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Inheritance\">Inheritance in JavaScript — MDN</a></li>\n<li>📜 <a href=\"https://hackernoon.com/inheritance-in-javascript-21d2b82ffa6f\">Inheritance in JavaScript — Rupesh Mishra</a></li>\n<li>📜 <a href=\"https://www.sitepoint.com/simple-inheritance-javascript/\">Simple Inheritance with JavaScript — David Catuhe</a></li>\n<li>📜 <a href=\"https://codeburst.io/javascript-inheritance-25fe61ab9f85\">JavaScript — Inheritance, delegation patterns and Object linking — NC Patro</a></li>\n<li>📜 <a href=\"https://blog.knoldus.com/object-oriented-javascript-polymorphism-with-examples/\">Object Oriented JavaScript: Polymorphism with examples — Knoldus Blogs</a></li>\n<li>📜 <a href=\"https://medium.com/yld-engineering-blog/program-like-proteus-a-beginners-guide-to-polymorphism-in-javascript-867bea7c8be2\">Program Like Proteus — A beginner’s guide to polymorphism in Javascript — Sam Galson</a></li>\n<li>📜 <a href=\"https://www.sitepoint.com/object-oriented-javascript-deep-dive-es6-classes/\">Object-oriented JavaScript: A Deep Dive into ES6 Classes — Jeff Mott</a></li>\n</ul>\n<h3>Videos</h3>\n<ul>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=yXlFR81tDBM\">Inheritance in JavaScript — kudvenkat</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=RBLIm5LMrmc\">JavaScript ES6 Classes and Inheritance — Traversy Media</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=zdovG9cuEBA\">Polymorphism in JavaScript — kudvenkat</a></li>\n</ul>\n<p><strong><a href=\"#m%E1%BB%A5c-l%E1%BB%A5c\">⬆ Lên đầu trang</a></strong></p>\n<hr>\n<h2>31. Design Patterns</h2>\n<h3>Bài viết</h3>\n<ul>\n<li>📜 <a href=\"https://scotch.io/bar-talk/4-javascript-design-patterns-you-should-know\">4 JavaScript Design Patterns You Should Know — Devan Patel</a></li>\n<li>📜 <a href=\"https://medium.com/beginners-guide-to-mobile-web-development/javascript-design-patterns-25f0faaaa15\">JavaScript Design Patterns – Beginner’s Guide to Mobile Web Development — Soumyajit Pathak</a></li>\n<li>📜 <a href=\"https://medium.com/front-end-hacking/javascript-design-patterns-ed9d4c144c81\">JavaScript Design Patterns — Akash Pal</a></li>\n<li>📜 <a href=\"https://seesparkbox.com/foundry/javascript_design_patterns\">Javascript Design Patterns: What They Are &#x26; How To Use Them — Patrick Simpson</a></li>\n<li>📜 <a href=\"https://blog.bitsrc.io/understanding-design-patterns-in-javascript-13345223f2dd\">JavaScript Design Patterns: Understanding Design Patterns in JavaScript - Sukhjinder Arora</a></li>\n<li>📜 <a href=\"https://github.com/fbeline/Design-Patterns-JS\">All the 23 (GoF) design patterns implemented in Javascript — Felipe Beline</a></li>\n<li>📜 <a href=\"https://addyosmani.com/resources/essentialjsdesignpatterns/book/\">Learning JavaScript Design Patterns — Addy Osmani </a></li>\n</ul>\n<h3>Videos</h3>\n<ul>\n<li>🎥 <a href=\"https://www.udacity.com/course/javascript-design-patterns--ud989\">JavaScript Design Patterns — Udacity</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=hO7mzO83N1Q\">JavaScript Patterns for 2017 — Scott Allen</a></li>\n</ul>\n<p><strong><a href=\"#m%E1%BB%A5c-l%E1%BB%A5c\">⬆ Lên đầu trang</a></strong></p>\n<hr>\n<h2>32. Partial Applications, Currying, Compose and Pipe</h2>\n<h3>Bài viết</h3>\n<ul>\n<li>📜 <a href=\"https://www.codementor.io/michelre/use-function-composition-in-javascript-gkmxos5mj\">Use function composition in JavaScript — Rémi</a></li>\n<li>📜 <a href=\"https://blog.benestudio.co/currying-in-javascript-es6-540d2ad09400\">Currying in JavaScript ES6 — Adam Bene</a></li>\n<li>📜 <a href=\"https://medium.com/@pragyan88/writing-middleware-composition-and-currying-elegance-in-javascript-8b15c98a541b\">Composition and Currying Elegance in JavaScript — Pragyan Das</a></li>\n<li>📜 <a href=\"https://hackernoon.com/javascript-functional-composition-for-every-day-use-22421ef65a10\">Functional JavaScript: Function Composition For Every Day Use — Joel Thoms</a></li>\n<li>📜 <a href=\"https://medium.com/@acparas/what-i-learned-today-july-2-2017-ab9a46dbf85f\">Functional Composition: compose() and pipe() — Anton Paras</a></li>\n<li>📜 <a href=\"http://busypeoples.github.io/post/functional-composing-javascript/\">Why The Hipsters Compose Everything: Functional Composing In JavaScript — A. Sharif</a></li>\n<li>📜 <a href=\"https://jrsinclair.com/articles/2016/gentle-introduction-to-functional-javascript-functions/\">A Gentle Introduction to Functional JavaScript pt III: Functions for making functions — James Sinclair</a></li>\n<li>📜 <a href=\"https://jsleao.wordpress.com/2015/02/22/curry-and-compose-why-you-should-be-using-something-like-ramda-in-your-code/\">Curry And Compose (why you should be using something like ramda in your code) — jsanchesleao</a></li>\n<li>📜 <a href=\"https://vanslaars.io/post/create-pipe-function/\">Function Composition in JavaScript with Pipe — Andy Van Slaars</a></li>\n<li>📜 <a href=\"https://developer.telerik.com/featured/practical-functional-javascript-ramda/\">Practical Functional JavaScript with Ramda — Andrew D’Amelio, Yuri Takhteyev</a></li>\n<li>📜 <a href=\"https://hackernoon.com/the-beauty-in-partial-application-currying-and-function-composition-d885bdf0d574\">The beauty in Partial Application, Currying, and Function Composition — Joel Thoms</a></li>\n<li>📜 <a href=\"https://medium.com/javascript-scene/curry-or-partial-application-8150044c78b8\">Curry or Partial Application? — Eric Elliott</a></li>\n<li>📜 <a href=\"http://benalman.com/news/2012/09/partial-application-in-javascript/\">Partial Application in JavaScript — Ben Alman</a></li>\n<li>📜 <a href=\"https://hackernoon.com/partial-application-of-functions-dbe7d9b80760\">Partial Application of Functions — Functional Reactive Ninja</a></li>\n<li>📜 <a href=\"https://codeburst.io/javascript-currying-vs-partial-application-4db5b2442be8\">Currying vs Partial Application — Deepak Gupta</a></li>\n<li>📜 <a href=\"http://raganwald.com/2015/04/01/partial-application.html\">Partial Application in ECMAScript 2015 — Ragan Wald</a></li>\n<li>📜 <a href=\"https://joecortopassi.com/articles/functional-composition-in-javascript/\">Functional Composition in Javascript — Joe Cortopassi</a></li>\n<li>📜 <a href=\"https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-1-1f15e387e536\">So You Want to be a Functional Programmer pt. I — Charles Scalfani</a></li>\n<li>📜 <a href=\"https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-2-7005682cec4a\">So You Want to be a Functional Programmer pt. II — Charles Scalfani</a></li>\n<li>📜 <a href=\"https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-3-1b0fd14eb1a7\">So You Want to be a Functional Programmer pt. III — Charles Scalfani</a></li>\n<li>📜 <a href=\"https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-4-18fbe3ea9e49\">So You Want to be a Functional Programmer pt. IV — Charles Scalfani</a></li>\n<li>📜 <a href=\"https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-5-c70adc9cf56a\">So You Want to be a Functional Programmer pt. V — Charles Scalfani</a></li>\n<li>📜 <a href=\"https://github.com/getify/Functional-Light-JS/blob/master/manuscript/ch3.md\">Functional-Light JavaScript Chapter 3: Managing Function Inputs — Kyle Simpson</a></li>\n</ul>\n<h3>Videos</h3>\n<ul>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=Wl2ejJOqHUU\">Compose vs Pipe: Functional Programming in JavaScript — Chyld Studios</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=jigHxo9YR30\">JavaScript Functional Programing: Compose — Theodore Anderson</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=mth5WpEc4Qs\">Function Composition - Functional JavaScript — NWCalvank</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=Uam37AlzPYw\">JavaScript Function Composition Explained — Theodore Anderson</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=VGB9HbL1GHk\">Let’s code with function composition — Fun Fun Function</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=DzLkRsUN2vE\">Partial Application vs. Currying — NWCalvank</a></li>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=jkebgHEcvac\">JavaScript Partial Application — Theodore Anderson</a></li>\n</ul>\n<p><strong><a href=\"#m%E1%BB%A5c-l%E1%BB%A5c\">⬆ Lên đầu trang</a></strong></p>\n<hr>\n<h2>33. Clean Code</h2>\n<h3>Bài viết</h3>\n<ul>\n<li>📜 <a href=\"https://github.com/ryanmcdermott/clean-code-javascript\">Clean Code concepts adapted for JavaScript — Ryan McDermott</a></li>\n<li>📜 <a href=\"https://blog.risingstack.com/javascript-clean-coding-best-practices-node-js-at-scale/\">JavaScript Clean Coding Best Practices — András Tóth</a></li>\n<li>📜 <a href=\"https://medium.com/@kevin_peters/function-parameters-in-javascript-clean-code-4caac109159b\">Function parameters in JavaScript Clean Code — Kevin Peters</a></li>\n<li>📜 <a href=\"https://css-tricks.com/clean-code-javascript/\">Clean Code JavaScript — Sarah Drasner</a></li>\n<li>📜 <a href=\"https://codeburst.io/keeping-your-code-clean-d30bcffd1a10\">Keeping your code clean — Samuel James</a></li>\n<li>📜 <a href=\"https://www.sitepoint.com/modern-javascript-best-practices/\">Best Practices for Using Modern JavaScript Syntax — M. David Green</a></li>\n</ul>\n<h3>Videos</h3>\n<ul>\n<li>🎥 <a href=\"https://www.youtube.com/watch?v=Mus_vwhTCq0\">JavaScript Pro Tips - Code This, NOT That</a></li>\n</ul>\n<p><strong><a href=\"#m%E1%BB%A5c-l%E1%BB%A5c\">⬆ Lên đầu trang</a></strong></p>","frontmatter":{"title":"BigO","date":"November 20, 2019","description":"BigO, thuật toán"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/BigO/","previous":{"fields":{"slug":"/react-performance/"},"frontmatter":{"title":"React tối ưu performance cho dự án","description":"javascript, javascript tiếng việt, javascript nâng cao"}},"next":null}}